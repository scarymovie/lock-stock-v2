// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"lock-stock-v2/internal/domain/repository"
	"lock-stock-v2/internal/handlers"
	"lock-stock-v2/internal/usecase"
	"lock-stock-v2/router"
	"net/http"
)

// Injectors from wire.go:

// InitializeRouter связывает все зависимости и возвращает готовый http.Handler.
func InitializeRouter() (http.Handler, error) {
	inMemoryRoomRepository := repository.NewInMemoryRoomRepository()
	joinRoomUsecase := usecase.NewJoinRoomUsecase(inMemoryRoomRepository)
	joinRoom := handlers.NewJoinRoom(joinRoomUsecase)
	inMemoryUserRepository := repository.NewInMemoryUserRepository()
	handler := router.NewRouter(joinRoom, inMemoryUserRepository)
	return handler, nil
}
